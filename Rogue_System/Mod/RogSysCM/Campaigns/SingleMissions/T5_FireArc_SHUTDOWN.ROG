-- ***T3_FireArc_ExtDocking File***
-- ***Created by Michael Juliano on 14MAR15***

-- NOTES:
-- --MISSION TRIGGER				conditions required to start the mission
-- ----TYPE:							ASAP, EVENT, REGION
-- ------									[ASAP: mission starts immediately. Normally for single missions]
-- ------									[EVENT: some event triggers the mission to begin]
-- ------									[REGION: a ship enters a region of space]
-- ----ACTION:							The action that triggers the start TYPE (if EVENT or REGION)
-- ------									[FOR EVENT: ARRIVES, DEPARTS, DESTROYED, ATTACKED, UNDOCKS, DOCKS, INFLIGHT]
-- ------									[FOR REGION: ENTERS, EXITS]
-- ----SUBJECT							(PLAYER_HOST, FRIENDLY, ENEMY, CIVILIAN, FACTION, SHIP, PILOT)
-- ----SUBJECT NAME(sNAME)				(name of ship, pilot, faction)

-- --TRIGGER REGION DATA
-- ----RADIUS							(triggering radius around region subject in km)
-- ----SUBJECT							(PLAYER, FRIENDLY, ENEMY, CIVILIAN, SHIP, PILOT)
-- ----sNAME							(name of ship, pilot, faction)
-- --STARTDELAY:						time in milli-seconds after the mission is triggered before it actually begins

-- --START LOC						where a flight departs from to enter the mission area
-- ----TYPE:							(PLAYER, MOTHERSHIP, CURRENT, ORBIT, ETC)
-- ------									[MOTHERSHIP then flight will only spawn from a mothership. Give mothership details in]
-- ------									[if PLAYER starts in space using at range from mission location, using detailA for: inORBIT(1), etc., etc.,]
-- ------									[if ORBIT then use details A, B and C for system, planet and moon ID's if know, else use -1's and use name only]
-- ------									[if CURRENT (as in location) then us details A, B and C for x, y and z position (in meters)]
-- ----sNAME:							(name of region target)
-- ----radius:							if ORBIT then this is the altitude above the body in km
-- --END LOC						where a flight flies to end their part in the mission
-- ----END REGION OBJECT				(MOTHERSHIP, CURRENT[location], SYSTEM, PLANET, MOON, SUN, ETC)	
-- ----END REGION NAME					(name of region target)
-- --FLIGHT STARTSTATE:				
-- ----Type:						ALL Systems Up(1), SystemActivated(2), SystemDisabled(4) OR System Destroyed(8), React Tank Empty(16), Coolant Tank Empty(32), LSS tank EMPTY(64) 
-- ----DetailA:						CSM(1), BATT(2), FCM(4), REACT(8), TMS(16), MTS(32), LENR(64), FLUX(128), <--used with types 2, 4 and 8
-- ----DetailB:						LSS(1), ECS(2), COMM(4), NAS(8), notSECURED(16)<-- with types 2, 4 and 8 / VMS ONOFF(32), WPN OFF(64), EXTFLOOD OFF(128) <-- with type 1
-- ----DetailC:						when detailA or B is set to a mult-unit system (such as MES), then this denotes WHICH unit in the system is affected (16 = ALL)						
-- --FLIGHT TASK:
-- ----Action:						ARRIVE, DEPART, ATTACK, NAVIGATE, ESCORT, TRAIL, ENTERORBIT, MAINTAINORBIT, DEFENDAREA, DEPLOY, COMBATCOMMAND
-- ----Method:						MAGIC, MOTHERSHIP, FLUXDRIVE, DARKDRIVE, MTSBURN, PRIWPN, SECWPN, TERWPN, ANYWPNS
-- ----Trigger:						ASAP, SHIPARRIVES, SHIPDEPARTS, FLIGHTARRIVES, FLIGHTDEPARTS, SHIPDESTROYED, FLIGHTDESTORYED,
-- ----									SHIPDISABLED, SHIPATTACKED, SHIPDAMAGED, ASAP
-- ----Delay:						in m/s, delay time before starting task
-- ----Time Limit:					in m/s, time allowed to complete task. 0 for unlimited
-- --FLIGHT TASK TARGET PRI & SEC:
-- ----Type:						SHIP, CELESTIAL, SATELLITE, MINE, NONE
-- ----tDetail:						STATION, FIGHTER, BOMBER, FREIGHTER, ETC, STAR, PLANET, MOON, ANYSHIP, ATTACKCRAFT (any small fighter/bomber/freighter), ESCORTSHIP, CAPITALSHIP
-- ----								if ARRIVE via MOTHERSHIP A=host bay/port; B = docked port; C=Internal Pad(0), External Pad(1), External Collar(2)
-- ----tNum_PRI, SEC & TER:			ship Tail number, system/planet/moon ID, -1 if unknown (assign random)
-- ----GenNewShips:					if a ship with the requested tail number is not found can a new one be created to fill its place? 0(NO), 1(YES)
-- ----tName:						Name of object if ID's are unknown
-- --TargetIFF:
-- ----Type:						Faction, Character, ENEMY, FRIENDLY, CIVILIAN, ANY
-- ----tDetail:						Faction Type
-- ----tName:						Character Name if character, or Faction Name if a generalized faction is used (such as "ColonyGov")
-- --SPAWN TOTAL:					number of times flight is spawned
-- --PLAYER ALLOWED:				can the player fly a ship in this flight (is an interior available)
-- --PLAYER SHIP ALLOWED:			can the player use one of their owned ships in this flight
-- --SHIP TOTAL:					number of ships in this flight
-- --UI NAME:						Name of ship or RANDOM. For flights of more than one it becomes "name" 1, 2, 3, etc
-- --preDefSHIP:					pre-defined ship name (from Mod/Ships/PreDefined folder) or RANDOM (not yet implemented)
-- --PILOT NAME:					Name of pilot, ROSTER or RANDOM. For multi-crewed ships this is the captain's name

-- END NOTES

T5_FireArc_SHUTDOWN = {}
T5_FireArc_SHUTDOWN_TUTscript = {}

--*************************************
--*************************************
T5_FireArc_SHUTDOWN = {
	UIName							= "Tutoriel N°5: Fermeture des systèmes",
	UIDesc							= "Procédures de fermeture des systèmes du FireArc",
	UIBriefing						= "Ce tutoriel est la suite du tutoriel numéro 4 sur la procédure d'amarrage externe. Il vous sera montré la procédure vous permettant de sécuriser votre vaisseau après une manoeuvre d'amarrage réussie.\r\n \r\nVotre vaisseau est pour le moment pleinement alimenté et amarré à la plateforme d'entraînement. Il n'y a pas de limite de temps définie, mais STC apprécie que cela soit fait rapidement.",
	has_TUTORIAL					= 1,

	MissionTrigger					= {Type = "ASAP", Action = "NONE", Subject = "NONE", sName = "NONE"},
	tRegion							= {Radius = 0.0, Subject = "PLAYER", sName = "NONE"},
	StartDelay						= 0,

	critical_MUSTdo					= 0,

	Flight1 = {
		UIName						= "Trainer",
		Owner						= {Type = "Faction", Subject = "FactionA", sName = "NONE"},
		StartState					= {Types = 1, DetailA = 0, DetailB = 128, DetailC = 0},
		StartLoc					= {Degrees = -1, Radius = -1, Subject = "DOCKED",  DetailA = 2, DetailB = 1, DetailC = -1, DetailD = -1, sName = "NONE"},
		StartROT					= {x = 0.0, y = 0.0, z = 0.0},
		SpawnTotal					= 1,
		playerALLOWED				= 1,
		playerShipALLOWED			= 0,
		ShipTotal					= 1,
		tailNUMBER1					= {Pri = -1, Sec = -1},																				-- Pri & Sec tail number identifier	XX-xxxx
		genNewShips					= 1,
		preDefSHIP					= "FireArc_BASIC",
		PilotName					= "RANDOM",
		TaskTotal					= 2,
		Task1 = {
			Task					= {Action = "ARRIVE", Method = "MOTHERSHIP", Trigger = "ASAP", sName = "NONE", Delay = 0},
			TimeLimit				= -1,
			TargetPRI				= {Type = "NONE", DetailA = 2, DetailB = 3, DetailC = 2},		--where(A), host(B), mine(C)
			TargetIFF				= {Type = "NONE"},
			isGOAL					= 0,
		},
		Task2 = {
			TimeLimit				= -1,
			Task					= {Action = "NAVIGATE", Method = "NONE", Trigger = "ASAP", sName = "NONE", Delay = 0},
			TargetPRI				= {Type = "SHIP", Subject = "ATTACKSHIP", DetailA = -1, DetailB = -1, DetailC = -1, sName = "NONE"},
			TargetIFF				= {Type = "Faction", Subject = "ColonyGov", sName = "Dunna Honrad"},
			isGOAL					= 0,
		},
	},
	Flight2 = {
		UIName						= "Campana OBT",
		Owner						= {Type = "Faction", Subject = "FactionA", sName = "NONE"},
		StartState					= {Types = 1, DetailA = 0, DetailB = 0, DetailC = 0},
		StartLoc					= {Degrees = 105.0, Radius = 805.0, Subject = "ORBIT", DetailA = 1, DetailB = 3, DetailC = 1, DetailD = 15, sName = "NONE"},
		StartROT					= {x = 0.0, y = 0.0, z = 0.0},
		SpawnTotal					= 1,
		playerALLOWED				= 0,
		playerShipALLOWED			= 0,
		ShipTotal					= 1,
		tailNUMBER1					= {Pri = -1, Sec = -1},																				-- Pri & Sec tail number identifier	XX-xxxx
		genNewShips					= 1,
		preDefSHIP					= "A1OBT_BASIC",
		PilotName					= "RANDOM",
		TaskTotal					= 2,
		Task1 = {
			Task					= {Action = "ARRIVE", Method = "MAGIC", Trigger = "ASAP", sName = "NONE", Delay = 0},
			TimeLimit				= -1,
			TargetPRI				= {Type = "NONE"},
			TargetIFF				= {Type = "NONE"},
			isGOAL					= 0,
		},
		Task2 = {
			TimeLimit				= -1,
			Task					= {Action = "NAVIGATE", Method = "NONE", Trigger = "ASAP", sName = "NONE", Delay = 0},
			TargetPRI				= {Type = "SHIP", Subject = "ATTACKSHIP", DetailA = -1, DetailB = -1, DetailC = -1, sName = "NONE"},
			TargetIFF				= {Type = "Faction", Subject = "ColonyGov", sName = "Dunna Honrad"},
			isGOAL					= 0,
		},
	},
}

T5_FireArc_SHUTDOWN_TUTscript = {
	Event1 = {
		Line = "Dans ce tutoriel vous allez reprendre là où vous en êtes resté dans le dernier : avoir réussi une manoeuvre d'amarrage.",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event2 = {
		Line = "Maintenant, vous devez éteindre votre vaisseau pour qu'il puisse être pris en charge en toute sécurité par l'équipe de maintenance.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event3 = {
		Line = "Les dégâts, les dysfonctionnements, et l'obsolescence persisteront d'une mission à l'autre en mode carrière...",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event4 = {
		Line = "... et la maintenance fera en sorte de réparer votre vaisseau entre les missions.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event5 = {
		Line = "Entrez dans la cabine de pilotage et installez vous pour que nous puissions commencer.",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = 0, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event6 = {
		Line = "Comme toujours, vous devriez sécuriser le siège pendant que vous opérez les systèmes du vaisseau. Faites le...",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1,
		compSystem = "SEAT_", compSystemID = 1, compSetting = 3, shipTYPE = "COCKPIT",
	},
	Event7 = {
		Line = "Extinction des lumières ambiantes...",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1,
		compSystem = "INTFLOOD_", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event8 = {
		Line = "...et activation du rétro éclairage des instruments.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "INSTLIGHT_", compSystemID = 1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event9 = {
		Line = "Normalement, comme vous l'aurez appris auparavant, le noyau MTS devrais avoir été désactivé pendant votre approche.",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event10 = {
		Line = "Cependant, vu que vous avez fait un amarrage externe, et que le STC a verrouillé vos accélérateurs, c'est bien de pratiquer encore l'extinction du noyau.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "NONE", SystemID = -1, Setting = -1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "BOMBER",
	},
	Event11 = {
		Line = "Premièrement, vous devez désactiver le chauffeur de plasma ICH.",
		Delay = 300, message_LENGTH = 1, object_ID = 142,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_ichenable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event12 = {
		Line = "La température du plasma va tomber à des niveaux de plasma froid, juste au dessus de la température minimale d'opération.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event13 = {
		Line = "Maintenant, DESACTIVEZ le ioniseur Helicon.",
		Delay = 300, message_LENGTH = 1, object_ID = 140,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_heliconenable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event14 = {
		Line = "Désactiver le Helicon arrête le processus de ionization du carburant.",
		Delay = 1, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_templvl", compSystemID = -1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event15 = {
		Line = "La température du plasma est tombée et il est maintenant sans danger de couper le champ magnétique. Désactiver le super conducteur maintenant.",
		Delay = 300, message_LENGTH = 1, object_ID = 141,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_superconenable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event16 = {
		Line = "Coupez l'alarme en cliquant sur le bouton 'FAULT ACK'.",
		Delay = 1000, message_LENGTH = 1, object_ID = 217,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "CAW_reset", compSystemID = 0, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event17 = {
		Line = "Désactivez l'injecteur de carburant en pressant le bouton.",
		Delay = 300, message_LENGTH = 1, object_ID = 152,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_pump", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event18 = {
		Line = "Maintenant, FERMEZ la valve de coupure du carburant.",
		Delay = 300, message_LENGTH = 1, object_ID = 139,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_shutoffvalve", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event19 = {
		Line = "Enfin, appuyez sur le bouton POWER pour désactiver le système MTS.",
		Delay = 300, message_LENGTH = 1, object_ID = 137,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MTS_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event20 = {
		Line = "Les boutons 'FUEL SOURCE', 'NOZZLES ALL ENABLE' et 'COLD GAS OVRD' vont se désactiver d'eux même.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event21 = {
		Line = "Désactivez le NAS en appuyant sur le bouton 'POWER'.",
		Delay = 1000, message_LENGTH = 1, object_ID = 184,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "NAS_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event22 = {
		Line = "Les boutons 'AP ALLOW', 'ATT ALIGN INITIATE' et les boutons de stabilisation vont se désactiver tout seul si ils étaient enfoncés.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event23 = {
		Line = "Vous allez couper le LENR dans un moment, donc vous avez besoin de désactiver le bouton 'Maintenance Cutoff' pour recevoir de l'énergie de la plateforme.",
		Delay = 1000, message_LENGTH = 1, object_ID = 53,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_service", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event24 = {
		Line = "Bien. Maintenant, désactivez le bouton 'FUSE' pour permettre au réacteur de commencer à refroidir à une température d'opération minimale.",
		Delay = 300, message_LENGTH = 1, object_ID = 109,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MES_fuseenable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event25 = {
		Line = "Pendant qu'il refroidit, et maintenant que vous êtes branché à la station, vous pouvez éteindre les cellules d'énergie.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event26 = {
		Line = "Ils elles opéraient vous devez d'abord fermer les valves de coupure. Vu qu'elles ne l'étaient pas vous pouvez passer à l'étape suivante.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event27 = {
		Line = "Désactivez la cellule d'énergie UNE",
		Delay = 300, message_LENGTH = 1, object_ID = 29,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "FCS_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event28 = {
		Line = "Quand vous le faites, les boutons FUEL SOURCE et REACT SOURCE devraient se réinitialiser.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event29 = {
		Line = "Sélectionnez la cellule DEUX...",
		Delay = 300, message_LENGTH = 1, object_ID = 28,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "FCS_select", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event30 = {
		Line = "...et désactivez la.",
		Delay = 300, message_LENGTH = 1, object_ID = 29,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "FCS_enable", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event31 = {
		Line = "Revenez sur le panneau du MES et fermez la valve de coupure du LENR.",
		Delay = 1000, message_LENGTH = 1, object_ID = 107,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MES_shutoffvalve", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event32 = {
		Line = "Avec le MTS et les cellules d'énergies coupées, et le LENR isolé, vous pouvez couper le Noyau Reactant.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event33 = {
		Line = "Avec le réservoir UN sélectionné, fermez la valve de coupure...",
		Delay = 300, message_LENGTH = 1, object_ID = 85,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_shutoffvalve", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event34 = {
		Line = "...et ensuite désactiver la pompe du réservoir.",
		Delay = 300, message_LENGTH = 1, object_ID = 84,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_pump", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event35 = {
		Line = "Maintenant, sélectionnez le réservoir DEUX.",
		Delay = 300, message_LENGTH = 1, object_ID = 95,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_select", compSystemID = 2, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event36 = {
		Line = "Fermez sa valve de coupure...",
		Delay = 300, message_LENGTH = 1, object_ID = 85,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_shutoffvalve", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event37 = {
		Line = "...et sa pompe.",
		Delay = 300, message_LENGTH = 1, object_ID = 84,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_pump", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event38 = {
		Line = "Maintenant, répétez la procédure pour les réservoirs TROIS et QUATRE.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_pump", compSystemID = 4, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event39 = {
		Line = "Enfin, désactivez le système RCM.",
		Delay = 300, message_LENGTH = 1, object_ID = 83,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "RCM_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event40 = {
		Line = "Coupez l'alarme RCM.",
		Delay = 1000, message_LENGTH = 1, object_ID = 217,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "CAW_reset", compSystemID = 0, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event41 = {
		Line = "Maintenant, le Noyau LENR devrait avoir suffisamment refroidit jusqu'à une température minimale. Appuyez sur 'PRE-HEAT' pour lui permettre de refroidir un peu plus.",
		Delay = 1000, message_LENGTH = 1, object_ID = 108,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MES_prestarter", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event42 = {
		Line = "Sur le panneau ECS, sélectionnez le circuit élétrique principal.",
		Delay = 300, message_LENGTH = 1, object_ID = 50,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_select", compSystemID = 3, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event43 = {
		Line = "Coupez le.",
		Delay = 300, message_LENGTH = 1, object_ID = 52,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_enable", compSystemID = 3, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event44 = {
		Line = "Cela prendra un peu de temps avant que vous puissiez désactiver le LENR et le MES. Profitez de ce temps pour couper le VMS (HMD, DISPLAYS, VMS et 'SYSTEM POWER').",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "CANMON_", compSystemID = 0, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event45 = {
		Line = "Il est sans dangers de désactiver la batterie secondaire. Sélectionnez la batterie DEUX...",
		Delay = 300, message_LENGTH = 1, object_ID = 14,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_select", compSystemID = 2, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event46 = {
		Line = "Coupez son rechargement...",
		Delay = 300, message_LENGTH = 1, object_ID = 26,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_recharge", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event47 = {
		Line = "...puis désactivez la batterie elle même.",
		Delay = 300, message_LENGTH = 1, object_ID = 15,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_enable", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event48 = {
		Line = "La température du noyau LENR est maintenant à un niveau sans danger pour une coupure. Désactivez le LENR.",
		Delay = 300, message_LENGTH = 1, object_ID = 106,
		System = "PLAYER_", SystemID = 0, Setting = 1,
		compSystem = "MES_generator", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event49 = {
		Line = "Vérifiez que la l'énergie de la barrière magnétique diminue lentement, puis désactivez le MES lui même.",
		Delay = 300, message_LENGTH = 1, object_ID = 98,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "MES_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event50 = {
		Line = "Avec le module MES éteint, vous pouvez couper les COMMS. Commencez par désactiver le transmetteur.",
		Delay = 1000, message_LENGTH = 1, object_ID = 177,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "COMM_xmit", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event51 = {
		Line = "Puis coupez le système lui même.",
		Delay = 300, message_LENGTH = 1, object_ID = 176,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "COMM_enable", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event52 = {
		Line = "Vous avez presque terminé. Tout ce qu'il reste est le TMS et couper l'énergie restante.",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event53 = {
		Line = "La boucle de refroidissement UNE doit être sélectionnée. Si elle l'est, appuyez sur 'LOOP DEPR' pour pomper le liquide de refroidissement dans son réservoir de stockage.",
		Delay = 300, message_LENGTH = 1, object_ID = 71,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "TMS_purge", compSystemID = 1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event54 = {
		Line = "Ne vous inquiétez pas. La maintenance remplacera ce liquide une fois qu'ils auront pris en charge le vaisseau.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event55 = {
		Line = "Une fois le système dépréssurisé, la pompe va automatiquement se couper.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event56 = {
		Line = "Sélectionnez la boucle DEUX.",
		Delay = 300, message_LENGTH = 1, object_ID = 64,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "TMS_select", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event57 = {
		Line = "Appuyez sur 'LOOP DEPR' pour vider la boucle DEUX.",
		Delay = 300, message_LENGTH = 1, object_ID = 71,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "TMS_purge", compSystemID = 2, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event58 = {
		Line = "Vérifiez qu'elle se vide bien et que la pompe se coupe.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event59 = {
		Line = "Une fois terminé vous pouvez désactiver le système TMS.",
		Delay = 300, message_LENGTH = 1, object_ID = 63,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "TMS_enable", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event60 = {
		Line = "Sur le panneau ECS, sélectionnez le circuit éléctrique secondaire.",
		Delay = 1000, message_LENGTH = 1, object_ID = 50,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_select", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event61 = {
		Line = "Désactivez le.",
		Delay = 300, message_LENGTH = 1, object_ID = 52,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_enable", compSystemID = 2, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event62 = {
		Line = "Sélectionnez la batterie UNE...",
		Delay = 1000, message_LENGTH = 1, object_ID = 14,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_select", compSystemID = 1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event63 = {
		Line = "Désactivez son rechargement...",
		Delay = 300, message_LENGTH = 1, object_ID = 26,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_recharge", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event64 = {
		Line = "...et ensuite désactivez la batterie. Ne vous inquiétez pas, vous êtes toujours sur l'énergie de maintenance.",
		Delay = 300, message_LENGTH = 1, object_ID = 15,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "BATT_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event65 = {
		Line = "De retour sur le panneau ECS, sélectionnez le circuit éléctrique primaire...",
		Delay = 1000, message_LENGTH = 1, object_ID = 50,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_select", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event66 = {
		Line = "... et coupez le.",
		Delay = 300, message_LENGTH = 1, object_ID = 52,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_enable", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event67 = {
		Line = "Isolez le vaisseau de l'énergie de maintenance. Activez le bouton 'Maintenance Cut-Off'.",
		Delay = 1000, message_LENGTH = 1, object_ID = 53,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "ECS_service", compSystemID = -1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event68 = {
		Line = "Coupez le rétro éclairage des instruments...",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "INSTLIGHT_", compSystemID = 1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event69 = {
		Line = "...et allumez la lumière ambiante pour pouvoir quitter le vaisseau en sécurité.",
		Delay = 500, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "INTFLOOD_", compSystemID = 1, compSetting = 1, shipTYPE = "COCKPIT",
	},
	Event70 = {
		Line = "Très bien joué. Maintenant vous avez une bonne idée des fonctions de votre vaisseau, de son démarrage à sa coupure.",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event71 = {
		Line = "Alors que le développement continue et que les systèmes sont affinés ou ajoutés ces procédures vont changer.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event72 = {
		Line = "Ne vous inquiétez pas, nous allons mettre à jour et ajouter des tutoriels alors que les choses progressent.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event73 = {
		Line = "Lorsque nous approcherons la sortie finale, nous ferons un manuel complet qui couvrira tous les vaisseaux pilotable.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event74 = {
		Line = "Aussi, au sein même de la simulation, l'intelligence embarquée du vaisseau (SOI) sera graduellement intégrée pour vous aider dans les tâches bas niveau.",
		Delay = 300, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
	Event75 = {
		Line = "Ceci conclu ce tutoriel. Encore une fois, bien joué...",
		Delay = 1000, message_LENGTH = 1, object_ID = -1,
		System = "PLAYER_", SystemID = 0, Setting = 1, 
		compSystem = "PLAYER_", compSystemID = -1, compSetting = 0, shipTYPE = "COCKPIT",
	},
}

--*************************************

--OTHER NOTES:
----Flights with capital ships (anything that can launch another ship) can only have 1 ship per flight
----The first task must ALWAYS be an arrival task (Type = 4)
----Manually assigned tail numbers, for missions, are in the range of primary 80 - 99, UNLESS using a pre-existing ship (if the tail number is not found, then a new ship created with a random tail number)
----flights with either primary/secondary of -1, or ranges outside of primary 80 - 99, will be randomly assigned
----the ship name (sName) is used to link a flight to their mothership. MAKE SURE THE NAMES ARE IDENTICAL!

